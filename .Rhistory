extract_intron_1<-function(bam){
intron_data=NULL
for(read in 1:dim(bam)[1]){
cigar<-as.character(bam$cigar[read])
cigar_vector<-cigar_as_vector(cigar)
index_N<-which(cigar_vector=="N")
if (length(index_N)>0){
cigar_letter<-cigar_as_letter(cigar_vector)
start=NULL
end=NULL
s=bam$pos[read]
for (i in 1:length(cigar_letter)){
p<-which(cigar_vector==cigar_letter[i])[1]
M<-as.numeric(paste(cigar_vector[1:p-1], collapse=""))
if(cigar_letter[i]=="M" | cigar_letter[i]=="N") {
start[i]=s; end [i]=start[i]+M-1
s=end[i]+1
} else {
start[i]=s; end [i]=s
}
cigar_vector<-cigar_vector[-c(1:p)]
}
all<-data.frame(start, end)
u<-which(cigar_letter=="N")
intron_start<-start[u];intron_end<-end[u]
} else{
intron_start<-0;intron_end<-0
}
intron_s_e<-data.frame(bam[read,1], bam[read,3], bam[read,7],intron_start, intron_end)
intron_data<-rbind(intron_data, intron_s_e)
}
colnames(intron_data)<-c("qname", "chrom", "mapq", "intron_starts", "intron_ends")
return(intron_data)
}
######End of function extract_intron_1()#############
########Start of function unique_read()##############
unique_read<-function(reads){
dup<-duplicated(reads)
uni_reads<-reads[which(dup==F)]
return(uni_reads)
}
########End of function unique_read()################
exon_count<-exon_count_file
file_list <- list.files(circle_reads_folder, pattern="*.txt")
detect_skip_exon=data.frame(circle_id=character(), trancript=character(), skip_exon_start=numeric(), skip_exon_end=numeric(), intorn_start=numeric(), intorn_end=numeric(), unique_reads=character())
write.table(detect_skip_exon, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, quote=F)
for (i in 1:length(file_list)){
bam<-read.table(file.path(circle_reads_folder, file_list[i]), header=T, fill=T)
intron_data<-extract_intron_1(bam)
circle_split<-unlist(strsplit(file_list[i], "_"))[1:3]
circle_id<-paste(circle_split, collapse="_")
index_exon_count<-which(exon_count$V1==circle_id)
exon_count_circle_id<-exon_count[index_exon_count,]
ind_0<-which(intron_data$intron_end!=0)
if(length(ind_0)>0){
intron<-intron_data[ind_0,]
skip_exon=data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
for(j in 1:nrow(intron)){
index<-which(exon_count_circle_id$V5<=intron$intron_end[j]-1 & exon_count_circle_id$V6>=intron$intron_start[j])
if (length(index)>0){
skip_exon_start=NULL
skip_exon_end=NULL
for(t in 1:length(index)){
skip_exon_start[t]<-max(exon_count_circle_id$V5[index[t]],intron$intron_start[j])
skip_exon_end[t]<-min(exon_count_circle_id$V6[index[t]],intron$intron_end[j])
}
circ_id<-circle_id
trans_id<-exon_count_circle_id$V2[1]
intron_start<-intron$intron_start[j]
intron_end<-intron$intron_end[j]
read<-intron$qname[j]
skip_exon_temp<-data.frame(circ_id, trans_id, skip_exon_start, skip_exon_end, intron_start, intron_end, read)
}else{
skip_exon_temp<-data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
}
skip_exon<-rbind(skip_exon,skip_exon_temp)
}
if(nrow(skip_exon)>0){
skip_exons<-paste(skip_exon[,3],skip_exon[,4], sep="_")
dup<-duplicated(skip_exons)
skip_exon_uni<-skip_exons[which(dup==F)]
if (length(skip_exon_uni)==1) {
skip_exon_1=data.frame(skip_exon[1,c(1:6)],unique_reads=paste(unique_read(skip_exon[,7]),collapse=","))
}else{
skip_exon_start=NULL
skip_exon_end=NULL
intron_start=NULL
intron_end=NULL
reads=NULL
for( k in 1:length(skip_exon_uni)){
a<-which(skip_exons==skip_exon_uni[k])
skip_exon_start[k]=skip_exon[a[1],3]
skip_exon_end[k]=skip_exon[a[1],4]
intron_start[k]=skip_exon[a[1],5]
intron_end[k]=skip_exon[a[1],6]
reads[k]=paste(unique_read(skip_exon[a,7]), collapse=",")
}
skip_exon_1=data.frame(skip_exon[1,1],skip_exon[1,2],skip_exon_start, skip_exon_end,intron_start, intron_end, unique_reads=reads)
}
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
skip_exon_1_sort<-skip_exon_1[order(skip_exon_1[,3], skip_exon_1[,4]),]
write.table(skip_exon_1_sort, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, col.names=F, quote=F, append=T)
}
}
circle_reads_folder<-"F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/circle_reads"
exon_count_file<-read.table("F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/exon_count.txt")
output_folder<-"F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/A"
skip_exon_detection(circle_reads_folder, exon_count_file, output_folder){
skip_exon_detection(circle_reads_folder, exon_count_file, output_folder)
skip_exon_detection<-function(circle_reads_folder, exon_count_file, output_folder){
#################Start of function cigar_as_vector()###########
cigar_as_vector<-function(cigar){
A=NULL
for(i in 1:nchar(cigar)){
A[i]<-substring(cigar, i,i)
}
return(A)
}
#################End of function cigar_as_vector()###########
#################Start of function cigar_as_letter()###########
cigar_as_letter<-function(cigar_vector){
a<-sub("^([[:alpha:]]*).*", "\\1", cigar_vector)
a<-a[-which(a=="")]
return(a)
}
#################End of function cigar_as_letter()###########
########Start of function extract_intron_1()##########
extract_intron_1<-function(bam){
intron_data=NULL
for(read in 1:dim(bam)[1]){
cigar<-as.character(bam$cigar[read])
cigar_vector<-cigar_as_vector(cigar)
index_N<-which(cigar_vector=="N")
if (length(index_N)>0){
cigar_letter<-cigar_as_letter(cigar_vector)
start=NULL
end=NULL
s=bam$pos[read]
for (i in 1:length(cigar_letter)){
p<-which(cigar_vector==cigar_letter[i])[1]
M<-as.numeric(paste(cigar_vector[1:p-1], collapse=""))
if(cigar_letter[i]=="M" | cigar_letter[i]=="N") {
start[i]=s; end [i]=start[i]+M-1
s=end[i]+1
} else {
start[i]=s; end [i]=s
}
cigar_vector<-cigar_vector[-c(1:p)]
}
all<-data.frame(start, end)
u<-which(cigar_letter=="N")
intron_start<-start[u];intron_end<-end[u]
} else{
intron_start<-0;intron_end<-0
}
intron_s_e<-data.frame(bam[read,1], bam[read,3], bam[read,7],intron_start, intron_end)
intron_data<-rbind(intron_data, intron_s_e)
}
colnames(intron_data)<-c("qname", "chrom", "mapq", "intron_starts", "intron_ends")
return(intron_data)
}
######End of function extract_intron_1()#############
########Start of function unique_read()##############
unique_read<-function(reads){
dup<-duplicated(reads)
uni_reads<-reads[which(dup==F)]
return(uni_reads)
}
########End of function unique_read()################
exon_count<-exon_count_file
file_list <- list.files(circle_reads_folder, pattern="*.txt")
detect_skip_exon=data.frame(circle_id=character(), trancript=character(), skip_exon_start=numeric(), skip_exon_end=numeric(), intorn_start=numeric(), intorn_end=numeric(), unique_reads=character())
write.table(detect_skip_exon, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, quote=F)
for (i in 1:length(file_list)){
bam<-read.table(file.path(circle_reads_folder, file_list[i]), header=T, fill=T)
intron_data<-extract_intron_1(bam)
circle_split<-unlist(strsplit(file_list[i], "_"))[1:3]
circle_id<-paste(circle_split, collapse="_")
index_exon_count<-which(exon_count$V1==circle_id)
exon_count_circle_id<-exon_count[index_exon_count,]
ind_0<-which(intron_data$intron_end!=0)
if(length(ind_0)>0){
intron<-intron_data[ind_0,]
skip_exon=data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
for(j in 1:nrow(intron)){
index<-which(exon_count_circle_id$V5<=intron$intron_end[j]-1 & exon_count_circle_id$V6>=intron$intron_start[j])
if (length(index)>0){
skip_exon_start=NULL
skip_exon_end=NULL
for(t in 1:length(index)){
skip_exon_start[t]<-max(exon_count_circle_id$V5[index[t]],intron$intron_start[j])
skip_exon_end[t]<-min(exon_count_circle_id$V6[index[t]],intron$intron_end[j])
}
circ_id<-circle_id
trans_id<-exon_count_circle_id$V2[1]
intron_start<-intron$intron_start[j]
intron_end<-intron$intron_end[j]
read<-intron$qname[j]
skip_exon_temp<-data.frame(circ_id, trans_id, skip_exon_start, skip_exon_end, intron_start, intron_end, read)
}else{
skip_exon_temp<-data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
}
skip_exon<-rbind(skip_exon,skip_exon_temp)
}
if(nrow(skip_exon)>0){
skip_exons<-paste(skip_exon[,3],skip_exon[,4], sep="_")
dup<-duplicated(skip_exons)
skip_exon_uni<-skip_exons[which(dup==F)]
if (length(skip_exon_uni)==1) {
skip_exon_1=data.frame(skip_exon[1,c(1:6)],unique_reads=paste(unique_read(skip_exon[,7]),collapse=","))
}else{
skip_exon_start=NULL
skip_exon_end=NULL
intron_start=NULL
intron_end=NULL
reads=NULL
for( k in 1:length(skip_exon_uni)){
a<-which(skip_exons==skip_exon_uni[k])
skip_exon_start[k]=skip_exon[a[1],3]
skip_exon_end[k]=skip_exon[a[1],4]
intron_start[k]=skip_exon[a[1],5]
intron_end[k]=skip_exon[a[1],6]
reads[k]=paste(unique_read(skip_exon[a,7]), collapse=",")
}
skip_exon_1=data.frame(skip_exon[1,1],skip_exon[1,2],skip_exon_start, skip_exon_end,intron_start, intron_end, unique_reads=reads)
}
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
skip_exon_1_sort<-skip_exon_1[order(skip_exon_1[,3], skip_exon_1[,4]),]
write.table(skip_exon_1_sort, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, col.names=F, quote=F, append=T)
}
}
skip_exon_detection(circle_reads_folder, exon_count_file, output_folder)
skip_exon_detection<-function(circle_reads_folder, exon_count_file, output_folder){
#################Start of function cigar_as_vector()###########
cigar_as_vector<-function(cigar){
A=NULL
for(i in 1:nchar(cigar)){
A[i]<-substring(cigar, i,i)
}
return(A)
}
#################End of function cigar_as_vector()###########
#################Start of function cigar_as_letter()###########
cigar_as_letter<-function(cigar_vector){
a<-sub("^([[:alpha:]]*).*", "\\1", cigar_vector)
a<-a[-which(a=="")]
return(a)
}
#################End of function cigar_as_letter()###########
########Start of function extract_intron_1()##########
extract_intron_1<-function(bam){
intron_data=NULL
for(read in 1:dim(bam)[1]){
cigar<-as.character(bam$cigar[read])
cigar_vector<-cigar_as_vector(cigar)
index_N<-which(cigar_vector=="N")
if (length(index_N)>0){
cigar_letter<-cigar_as_letter(cigar_vector)
start=NULL
end=NULL
s=bam$pos[read]
for (i in 1:length(cigar_letter)){
p<-which(cigar_vector==cigar_letter[i])[1]
M<-as.numeric(paste(cigar_vector[1:p-1], collapse=""))
if(cigar_letter[i]=="M" | cigar_letter[i]=="N") {
start[i]=s; end [i]=start[i]+M-1
s=end[i]+1
} else {
start[i]=s; end [i]=s
}
cigar_vector<-cigar_vector[-c(1:p)]
}
all<-data.frame(start, end)
u<-which(cigar_letter=="N")
intron_start<-start[u];intron_end<-end[u]
} else{
intron_start<-0;intron_end<-0
}
intron_s_e<-data.frame(bam[read,1], bam[read,3], bam[read,7],intron_start, intron_end)
intron_data<-rbind(intron_data, intron_s_e)
}
colnames(intron_data)<-c("qname", "chrom", "mapq", "intron_starts", "intron_ends")
return(intron_data)
}
######End of function extract_intron_1()#############
########Start of function unique_read()##############
unique_read<-function(reads){
dup<-duplicated(reads)
uni_reads<-reads[which(dup==F)]
return(uni_reads)
}
########End of function unique_read()################
exon_count<-exon_count_file
file_list <- list.files(circle_reads_folder, pattern="*.txt")
detect_skip_exon=data.frame(circle_id=character(), trancript=character(), skip_exon_start=numeric(), skip_exon_end=numeric(), intorn_start=numeric(), intorn_end=numeric(), unique_reads=character())
write.table(detect_skip_exon, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, quote=F)
for (i in 1:length(file_list)){
bam<-read.table(file.path(circle_reads_folder, file_list[i]), header=T, fill=T)
intron_data<-extract_intron_1(bam)
circle_split<-unlist(strsplit(file_list[i], "_"))[1:3]
circle_id<-paste(circle_split, collapse="_")
index_exon_count<-which(exon_count$V1==circle_id)
exon_count_circle_id<-exon_count[index_exon_count,]
ind_0<-which(intron_data$intron_end!=0)
if(length(ind_0)>0){
intron<-intron_data[ind_0,]
skip_exon=data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
for(j in 1:nrow(intron)){
index<-which(exon_count_circle_id$V5<=intron$intron_end[j]-1 & exon_count_circle_id$V6>=intron$intron_start[j])
if (length(index)>0){
skip_exon_start=NULL
skip_exon_end=NULL
for(t in 1:length(index)){
skip_exon_start[t]<-max(exon_count_circle_id$V5[index[t]],intron$intron_start[j])
skip_exon_end[t]<-min(exon_count_circle_id$V6[index[t]],intron$intron_end[j])
}
circ_id<-circle_id
trans_id<-exon_count_circle_id$V2[1]
intron_start<-intron$intron_start[j]
intron_end<-intron$intron_end[j]
read<-intron$qname[j]
skip_exon_temp<-data.frame(circ_id, trans_id, skip_exon_start, skip_exon_end, intron_start, intron_end, read)
}else{
skip_exon_temp<-data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
}
skip_exon<-rbind(skip_exon,skip_exon_temp)
}
if(nrow(skip_exon)>0){
skip_exons<-paste(skip_exon[,3],skip_exon[,4], sep="_")
dup<-duplicated(skip_exons)
skip_exon_uni<-skip_exons[which(dup==F)]
if (length(skip_exon_uni)==1) {
skip_exon_1=data.frame(skip_exon[1,c(1:6)],unique_reads=paste(unique_read(skip_exon[,7]),collapse=","))
}else{
skip_exon_start=NULL
skip_exon_end=NULL
intron_start=NULL
intron_end=NULL
reads=NULL
for( k in 1:length(skip_exon_uni)){
a<-which(skip_exons==skip_exon_uni[k])
skip_exon_start[k]=skip_exon[a[1],3]
skip_exon_end[k]=skip_exon[a[1],4]
intron_start[k]=skip_exon[a[1],5]
intron_end[k]=skip_exon[a[1],6]
reads[k]=paste(unique_read(skip_exon[a,7]), collapse=",")
}
skip_exon_1=data.frame(skip_exon[1,1],skip_exon[1,2],skip_exon_start, skip_exon_end,intron_start, intron_end, unique_reads=reads)
}
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
skip_exon_1_sort<-skip_exon_1[order(skip_exon_1[,3], skip_exon_1[,4]),]
write.table(skip_exon_1_sort, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, col.names=F, quote=F, append=T)
}
}
circle_reads_folder<-"F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/circle_reads"
exon_count_file<-read.table("F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/exon_count.txt")
output_folder<-"F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/A"
skip_exon_detection(circle_reads_folder, exon_count_file, output_folder)
exon_count<-exon_count_file
file_list <- list.files(circle_reads_folder, pattern="*.txt")
skip_exon_detection<-function(circle_reads_folder, exon_count_file, output_folder){
#################Start of function cigar_as_vector()###########
cigar_as_vector<-function(cigar){
A=NULL
for(i in 1:nchar(cigar)){
A[i]<-substring(cigar, i,i)
}
return(A)
}
#################End of function cigar_as_vector()###########
#################Start of function cigar_as_letter()###########
cigar_as_letter<-function(cigar_vector){
a<-sub("^([[:alpha:]]*).*", "\\1", cigar_vector)
a<-a[-which(a=="")]
return(a)
}
#################End of function cigar_as_letter()###########
########Start of function extract_intron_1()##########
extract_intron_1<-function(bam){
intron_data=NULL
for(read in 1:dim(bam)[1]){
cigar<-as.character(bam$cigar[read])
cigar_vector<-cigar_as_vector(cigar)
index_N<-which(cigar_vector=="N")
if (length(index_N)>0){
cigar_letter<-cigar_as_letter(cigar_vector)
start=NULL
end=NULL
s=bam$pos[read]
for (i in 1:length(cigar_letter)){
p<-which(cigar_vector==cigar_letter[i])[1]
M<-as.numeric(paste(cigar_vector[1:p-1], collapse=""))
if(cigar_letter[i]=="M" | cigar_letter[i]=="N") {
start[i]=s; end [i]=start[i]+M-1
s=end[i]+1
} else {
start[i]=s; end [i]=s
}
cigar_vector<-cigar_vector[-c(1:p)]
}
all<-data.frame(start, end)
u<-which(cigar_letter=="N")
intron_start<-start[u];intron_end<-end[u]
} else{
intron_start<-0;intron_end<-0
}
intron_s_e<-data.frame(bam[read,1], bam[read,3], bam[read,7],intron_start, intron_end)
intron_data<-rbind(intron_data, intron_s_e)
}
colnames(intron_data)<-c("qname", "chrom", "mapq", "intron_starts", "intron_ends")
return(intron_data)
}
######End of function extract_intron_1()#############
########Start of function unique_read()##############
unique_read<-function(reads){
dup<-duplicated(reads)
uni_reads<-reads[which(dup==F)]
return(uni_reads)
}
########End of function unique_read()################
exon_count<-exon_count_file
file_list <- list.files(circle_reads_folder, pattern="*.txt")
detect_skip_exon=data.frame(circle_id=character(), transcript=character(), skip_exon_start=numeric(), skip_exon_end=numeric(), intron_start=numeric(), intron_end=numeric(), unique_reads=character())
write.table(detect_skip_exon, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, quote=F)
for (i in 1:length(file_list)){
bam<-read.table(file.path(circle_reads_folder, file_list[i]), header=T, fill=T)
intron_data<-extract_intron_1(bam)
circle_split<-unlist(strsplit(file_list[i], "_"))[1:3]
circle_id<-paste(circle_split, collapse="_")
index_exon_count<-which(exon_count$V1==circle_id)
exon_count_circle_id<-exon_count[index_exon_count,]
ind_0<-which(intron_data$intron_end!=0)
if(length(ind_0)>0){
intron<-intron_data[ind_0,]
skip_exon=data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
for(j in 1:nrow(intron)){
index<-which(exon_count_circle_id$V5<=intron$intron_end[j]-1 & exon_count_circle_id$V6>=intron$intron_start[j])
if (length(index)>0){
skip_exon_start=NULL
skip_exon_end=NULL
for(t in 1:length(index)){
skip_exon_start[t]<-max(exon_count_circle_id$V5[index[t]],intron$intron_start[j])
skip_exon_end[t]<-min(exon_count_circle_id$V6[index[t]],intron$intron_end[j])
}
circ_id<-circle_id
trans_id<-exon_count_circle_id$V2[1]
intron_start<-intron$intron_start[j]
intron_end<-intron$intron_end[j]
read<-intron$qname[j]
skip_exon_temp<-data.frame(circ_id, trans_id, skip_exon_start, skip_exon_end, intron_start, intron_end, read)
}else{
skip_exon_temp<-data.frame(circ_id=character(0), trans_id=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), read=character(0))
}
skip_exon<-rbind(skip_exon,skip_exon_temp)
}
if(nrow(skip_exon)>0){
skip_exons<-paste(skip_exon[,3],skip_exon[,4], sep="_")
dup<-duplicated(skip_exons)
skip_exon_uni<-skip_exons[which(dup==F)]
if (length(skip_exon_uni)==1) {
skip_exon_1=data.frame(skip_exon[1,c(1:6)],unique_reads=paste(unique_read(skip_exon[,7]),collapse=","))
}else{
skip_exon_start=NULL
skip_exon_end=NULL
intron_start=NULL
intron_end=NULL
reads=NULL
for( k in 1:length(skip_exon_uni)){
a<-which(skip_exons==skip_exon_uni[k])
skip_exon_start[k]=skip_exon[a[1],3]
skip_exon_end[k]=skip_exon[a[1],4]
intron_start[k]=skip_exon[a[1],5]
intron_end[k]=skip_exon[a[1],6]
reads[k]=paste(unique_read(skip_exon[a,7]), collapse=",")
}
skip_exon_1=data.frame(skip_exon[1,1],skip_exon[1,2],skip_exon_start, skip_exon_end,intron_start, intron_end, unique_reads=reads)
}
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
}else skip_exon_1=data.frame(circle_id=character(0), transcript=character(0), skip_exon_start=numeric(0), skip_exon_end=numeric(0), intron_start=numeric(0), intron_end=numeric(0), unique_reads=character(0))
skip_exon_1_sort<-skip_exon_1[order(skip_exon_1[,3], skip_exon_1[,4]),]
write.table(skip_exon_1_sort, file.path(output_folder,"detect_skip_exon.txt"),sep="\t", row.names=F, col.names=F, quote=F, append=T)
}
}
skip_exon_detection(circle_reads_folder, exon_count_file, output_folder)
skip_exon<-read.table("F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/detect_skip_exon.txt", header=T)
skip_exon<-read.table("F:/222222222222222222/FcircSEC_RNASeq/Example_data_circRNA-full/A/detect_skip_exon.txt", header=T)
head(skip_exon)
dim(skip_exon)
usethis::use_data(skip_exon)
library(circRNAFull)
library(circRNAFull)
library(circRNAFull)
library(circRNAFull)
library(circRNAFull)
document()
library(devtools)
document()
document()
library(circRNAFull)
library(devtools)
usethis::use_travis()
usethis::use_github_actions()
usethis::use_github_actions()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
